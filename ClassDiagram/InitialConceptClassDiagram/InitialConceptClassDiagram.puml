@startuml
hide empty members


GameObject o--o Components.Component
class GameObject{
    List<Component> componentList
    GameObject parentGameObject
}

Scene o--GameObject
class Scene{
    List<GameObject> gameObjectList
}
left to right direction
Managers.ComponentList o-- GameObject
namespace Managers{
  
    RenderManager *-- ComponentList
    class RenderManager{
        ComponentList componentList
    }
    
    UIRendeManager *-- ComponentList
    class UIRendeManager{
        LComponentList componentList
    }
    
    note bottom of UIColliderManager
    uiのマウスクリックの為のマネージャ
    end note
    
    UIColliderManager *-- ComponentList
    class UIColliderManager{
        ComponentList componentList
    }
    
    RigidBodyManager *-- ComponentList
    class RigidBodyManager{
        ComponentList componentList
    }
    ColliderManager *-- ComponentList
    class ColliderManager{
       ComponentList componentList
    }
    CustomScriptManager *-- ComponentList
    class CustomScriptManager{
    ComponentList componentList
    }
    class ComponentList{
        Dictionary<Components,List<GameObject>> GameObjectListDictionary
    }
    ComponentList *- Managers.Components
    enum Components{
        Collider,RigidBody,Render,UIRende,UICollider
    }
}

Editor.SceneWindow o-- Scene
Editor.HierarchyWindow o-- Scene
Editor.GameWindow o-- Scene
namespace Editor{
    class EditorWindowsManager{
        List<EditorWindow> EditorWindowList
    }
    EditorWindowsManager o-- EditorWindow
    class EditorWindow{}
    SceneWindow --|> EditorWindow
    HierarchyWindow --|> EditorWindow
    InspectorWindow --|> EditorWindow
    GameWindow --|> EditorWindow
    ProjectWindow --|> EditorWindow
    
    class SceneWindow{
        Scene scene
    }
    class HierarchyWindow{
        Scene scene
    }
    class InspectorWindow{}
    class GameWindow{
        Scene scene
    }
    class ProjectWindow{}
}
namespace Components{
    class Component{
        GameObject gameObject
    }
    
    RenderComponent --|>Component
    RigidBodyComponent --|>Component
    TransformComponent --|>Component
    CustomScriptComponent --|> Component
    class RenderComponent {}
    class RigidBodyComponent {}
    class TransformComponent{
                vector3 position
                vector3 rotation
                vector3 scale
                }
    class CustomScriptComponent{}
    
    ColliderComponent ---|>Component
    BoxColliderComponet --|>ColliderComponent
    SphereColliderComponent --|>ColliderComponent
    CapsuleColliderComponent --|>ColliderComponent
    MeshColliderComponent --|>ColliderComponent
    class ColliderComponent{}
    class BoxColliderComponet{}
    class SphereColliderComponent{}
    class CapsuleColliderComponent{}
    class MeshColliderComponent{}
    ' ui
    namespace UI{
        RectTransformComponent --|> Components.Component
        UIColliderComponent --|> Components.Component
        ImageComponent --|> Components.Component
        TextComponent --|> Components.Component
        interface IUIRender{
            RectTransformComponent transform
        }
        RectTransformComponent --o IUIRender
        ImageComponent ..|> IUIRender
        TextComponent ..|> IUIRender
        class RectTransformComponent{
            vector3 position
            vector3 rotation
            vector3 scale
        }
        class UIColliderComponent {}
        class ImageComponent{}
        class TextComponent{}
    }
}
@enduml